[data]
_Help           = Visibility data options
ms              =               # Name of measurement set (MS) #type:str
column          = DATA          # Name of MS column to read for data. #metavar:COLUMN #type:str
time-chunk      = 32            # Chunk data up by this number of timeslots. This limits the amount of data
                                  processed at once. Smaller chunks allow for a smaller RAM footprint and 
                                  greater parallelism, but this sets an upper limit on the solution intervals
                                  that may be employed. #metavar:timeslots #type:int
freq-chunk      = 32            # Chunk data by this number of channels. See time-chunk for info.
                                  #metavar:channels #type:int
chunk-by        = SCAN_NUMBER   # If set, then time chunks will be broken up whenever the value in the named 
                                  column(s) jumps by >JUMPSIZE. Multiple column names may be given, separated
                                  by commas. Use None to disable. #metavar:COLUMNS
chunk-by-jump   = 1             # The jump size used in conjunction with chunk-by. If 0, then any change in
                                  value is a jump. If n, then the change must be >n. #metavar:JUMPSIZE
                                  #type:float
single-chunk    =               # If set, processes just one chunk of data matching the chunk ID. Useful for 
                                  debugging.

[sel]
_Help = Data selection options
field           = 0             # FIELD_ID to read from the MS. #metavar:FIELD #type:int
ddid            = None          # DATA_DESC_IDs to read from the MS. Default reads all. Can be specified as
                                  e.g. "5", "5,6,7", "5~7" (inclusive range), "5:8" (exclusive range), 
                                  "5:" (from 5 to last). #metavar:DDID
taql            =               # Additional TaQL selection string. Combined with other selection options.
                                  #metavar:TaQL #type:str

[model]
_Help           = Calibration model options
lsm             =               # Predict model visibilities from the specified LSM (requires Montblanc).
                                  One or both of lsm and column must be set. #metavar:FILENAME #type:str
column          =               # Read additional model visibilities from given MS column. See lsm.
ddes            = 0             # Enable direction dependent simulation (lsm must be set). This must be 
                                  enabled if direction dependent calibration is required.
beam-pattern    = None          # Apply beams if an acceptable beam pattern is specified eg. 
                                  'beam_$(corr)_$(reim).fits' or 'beam_$(CORR)_$(REIM).fits'.
beam-l-axis     = None          # Orientation of the beam l-axis in the .fits file.
beam-m-axis     = None          # Orientation of the beam m-axis in the .fits file.

[montblanc] 
_Help           = Montblanc simulation options 
device-type     = CPU           # Use CPU or GPU for simulation. #options:CPU|GPU
dtype           = float         # Precision for simulation. #options:float|double #type:str
feed-type       = linear        # Simulate using linear or circular feeds. #options:linear|circular
mem-budget      = 1024          # Memory budget in MB for simulation. #type:int

[weight]
_Help           = Weighting options
column          = WEIGHT_SPECTRUM   # Column to read weights from. Weights are applied by default. Specify an
                                      empty string to disable. 

[flags]
_Help           = Flagging options
apply             = legacy      # Which flagsets will be applied prior to calibration.
auto-init         = legacy      # Insert BITFLAG column if it is missing, and initialize a named flagset 
                                  from FLAG/FLAG_ROW.
save              = cubical     # Save flags to named flagset in BITFLAG. If none or 0, will not save.
reinit-bitflags   = 0           # If true, reninitializes BITFLAG column from scratch. Useful if you ended up
                                  with a dead one. #type:bool
tf-chisq-median   = 1.2         # Intervals with chi-squared values larger than this value times the median
                                  will be flagged.
tf-np-median      = 0.5         # Minimum percentage of unflagged visibilities per time/frequncy slot
                                  required to prevent flagging.
time-density      = 0.5         # Minimum percentage of unflagged visibilities along the time axis required
                                  to prevent flagging.
chan-density      = 0.5         # Minimum percentage of unflagged visibilities along the frequency axis
                                  required to prevent flagging.
ddid-density      = 0.5         # Minimum percentage of unflagged visibilities along the DDID axis
                                  required to prevent flagging.

[sol]
_Help            = Solution options which apply at the solver level
jones            = G            # Comma-separated list of Jones terms to enable (matching --j1-label, 
                                  --j2-label, etc.)
precision        = 32           # Solve in single or double precision #options:32|64
delta-g          = 1e-6         # Theshold for gain accuracy - gains which improve by less than this value
                                  are considered converged.
delta-chi        = 1e-6         # Theshold for solution stagnancy - if the chi-squared is improving by less 
                                  than this value, the gain is considered stalled.
chi-int          = 5            # Number of iterations to perform between chi-suqared checks. This is done to
                                  avoid computing the expensive chi-squared test evey iteration.
last-rites       = 1            # Re-estimate chi-squred and noise at the end of a solution cycle. Disabling
                                  last rites can save a bit of time, but makes the post-solution stats less
                                  informative. #type:bool
stall-quorum     = 0.99         # Minimum percentage of solutions which must have stalled before terminating 
                                  the solver.

[dist]
_Help           = Parallelization and distribution options
ncpu            = 0             # Number of CPUs (processes) to use (0 or 1 disables parallelism). #type:int
min-chunks      = 32            # Minimum number of time-chunk by freq-chunk data-chunks to load into memory
                                  simultaneously. This number should be divisible by ncpu-1 for optimal 
                                  performance.

[out]
_Help           = Options for output products
name            = cubical           # Base name of output files. #metavar:BASENAME #type:str
mode            = sc                # Operational mode.
                                        [so] solve only;
                                        [sc] solve and generate corrected visibilities;
                                        [sr] solve and generate corrected residuals;
                                        [ss] solve and generate uncorrected residuals;
                                        [ac] apply solutions, generate corrected visibilities;
                                        [ar] apply solutions, generate corrected residuals;
                                        [as] apply solutions, generate uncorrected residuals;
                                      #options:so|sc|sr|ss|ac|ar|as
column          = CORRECTED_DATA    # Output MS column name (if applicable).
plots           = 1                 # Generate summary plots. #type:bool
plots-show      = 1                 # Show summary plots interactively. #type:bool

[log]
_Help = Options related to logging
memory          = 1             # Log memory usage. #type:bool
boring          = 0             # Disable progress bars and some console output. #type:bool
append          = 0             # Append to log file if it exists. #type:bool

[debug]
_Help = Debugging options for the discerning masochist
verbose = 0                     # Output verbosity level. #type:int #metavar:LEVEL
pdb = 0                         # Jumps into pdb on error. #type:bool

[misc]
_Help             = Miscellaneous options
random-seed       = None        # Seed random number generator with explicit seed. Useful for reproducibility
                                  of the random-based optimizations (sparsification, etc.). #metavar:N
parset-version    = 0.1         # Parset version number, for migration purposes. Can't be specified on command
                                  line. #no_cmdline:1

[j1]
_Help = Options related to the first (leftmost) term in the Jones chain.
solvable    = 1                 # Used in conjunction with load-from. A non-solvable term is loaded from disk.
                                  Not to be confused with the jones section of [sol], which determines which
                                  terms are active. #type:bool
label       = G                 # Jones matrix label. #metavar:LABEL
type        = complex-2x2       # Type of Jones matrix to solve for. Note that if multiple Jones terms are
                                  enabled, then only complex-2x2 is supported.
                                  #options:complex-2x2|phase-diag|robust-2x2|f-slope|t-slope|tf-plane
load-from   =                   # Load solutions from given database. By default, the Jones matrix label is
                                  used to form up parameter names, but his may be overridden by adding 
                                  "//LABEL" to the database filename. #metavar:FILENAME[//LABEL]
save-to     = {data[ms]}/G-field:{sel[field]}  # Save solutions to given database. #metavar:FILENAME
dd-term     = 0                 # Determines whether this term is direction dependent. --model-ddes must 
                                  be enabled. #type:bool
update-type = full              # Determines update type. This is a restriction on the update, and does not 
                                  change the Jones type. Full is the default behaviour, phase-diag normalises
                                  the on-diagonal terms and discards the off-diagonals, diag discards the 
                                  off-diagonal terms. #options:full|phase-diag|diag|amp-diag
time-int    = 1                 # Time solution interval for this term. #metavar:TIMESLOTS
freq-int    = 1                 # Frequency solution interval for this term. #metavar:CHANNELS
clip-low    = .1                # Amplitude clipping - flag solutions with diagonal amplitudes below this
                                  value. #metavar:AMPL #type:float
clip-high   = 10                # Amplitude clipping - flag solutions with any amplitudes above this value.
                                  #metavar:AMPL #type:float
clip-after  = 5                 # Number of iterations after which to clip this gain. #metavar:NITER #type:int
max-iter    = 200               # Maximum number of iterations spent on this term. #metavar:NITER
conv-quorum = 0.99              # Minimum percentage of converged solutions to accept. #metavar:FRACTION
term-iters  = 2                 # Number of iterations to perform on this term before switching to the next.
                                  Must be even. This is only used for Jones chain functionality, when the
                                  solver is intended to alternate between terms. Set high to solve a term to 
                                  convergence before moving to the next. #metavar:NITER
ref-ant     = None              # Reference antenna - its phase is guaranteed to be zero. #metavar:ANTENNA

[j2]
_Help = Options related to the first (leftmost) term in the Jones chain.
solvable    = 1                 # Used in conjunction with load-from. A non-solvable term is loaded from disk.
                                  Not to be confused with the jones section of [sol], which determines which
                                  terms are active. #type:bool
label       = B                 # Jones matrix label. #metavar:LABEL
type        = complex-2x2       # Type of Jones matrix to solve for. Note that if multiple Jones terms are
                                  enabled, then only complex-2x2 is supported.
                                  #options:complex-2x2|phase-diag|robust-2x2|f-slope|t-slope|tf-plane
load-from   =                   # Load solutions from given database. By default, the Jones matrix label is
                                  used to form up parameter names, but his may be overridden by adding 
                                  "//LABEL" to the database filename. #metavar:FILENAME[//LABEL]
save-to     = {data[ms]}/B-field:{sel[field]}  # Save solutions to given database. #metavar:FILENAME
dd-term     = 0                 # Determines whether this term is direction dependent. --model-ddes must 
                                  be enabled. #type:bool
update-type = full              # Determines update type. This is a restriction on the update, and does not 
                                  change the Jones type. Full is the default behaviour, phase-diag normalises
                                  the on-diagonal terms and discards the off-diagonals, diag discards the 
                                  off-diagonal terms. #options:full|phase-diag|diag|amp-diag
time-int    = 1                 # Time solution interval for this term. #metavar:TIMESLOTS
freq-int    = 1                 # Frequency solution interval for this term. #metavar:CHANNELS
clip-low    = .1                # Amplitude clipping - flag solutions with diagonal amplitudes below this
                                  value. #metavar:AMPL #type:float
clip-high   = 10                # Amplitude clipping - flag solutions with any amplitudes above this value.
                                  #metavar:AMPL #type:float
clip-after  = 5                 # Number of iterations after which to clip this gain. #metavar:NITER #type:int
max-iter    = 200               # Maximum number of iterations spent on this term. #metavar:NITER
conv-quorum = 0.99              # Minimum percentage of converged solutions to accept. #metavar:FRACTION
term-iters  = 2                 # Number of iterations to perform on this term before switching to the next.
                                  Must be even. This is only used for Jones chain functionality, when the
                                  solver is intended to alternate between terms. Set high to solve a term to 
                                  convergence before moving to the next. #metavar:NITER
ref-ant     = None              # Reference antenna - its phase is guaranteed to be zero. #metavar:ANTENNA

[j3]
_Help = Options related to the first (leftmost) term in the Jones chain.
solvable    = 1                 # Used in conjunction with load-from. A non-solvable term is loaded from disk.
                                  Not to be confused with the jones section of [sol], which determines which
                                  terms are active. #type:bool
label       = dE                # Jones matrix label. #metavar:LABEL
type        = complex-2x2       # Type of Jones matrix to solve for. Note that if multiple Jones terms are
                                  enabled, then only complex-2x2 is supported.
                                  #options:complex-2x2|phase-diag|robust-2x2|f-slope|t-slope|tf-plane
load-from   =                   # Load solutions from given database. By default, the Jones matrix label is
                                  used to form up parameter names, but his may be overridden by adding 
                                  "//LABEL" to the database filename. #metavar:FILENAME[//LABEL]
save-to     = {data[ms]}/dE-field:{sel[field]}  # Save solutions to given database. #metavar:FILENAME
dd-term     = 0                 # Determines whether this term is direction dependent. --model-ddes must 
                                  be enabled. #type:bool
update-type = full              # Determines update type. This is a restriction on the update, and does not 
                                  change the Jones type. Full is the default behaviour, phase-diag normalises
                                  the on-diagonal terms and discards the off-diagonals, diag discards the 
                                  off-diagonal terms. #options:full|phase-diag|diag|amp-diag
time-int    = 1                 # Time solution interval for this term. #metavar:TIMESLOTS
freq-int    = 1                 # Frequency solution interval for this term. #metavar:CHANNELS
clip-low    = .1                # Amplitude clipping - flag solutions with diagonal amplitudes below this
                                  value. #metavar:AMPL #type:float
clip-high   = 10                # Amplitude clipping - flag solutions with any amplitudes above this value.
                                  #metavar:AMPL #type:float
clip-after  = 5                 # Number of iterations after which to clip this gain. #metavar:NITER #type:int
max-iter    = 200               # Maximum number of iterations spent on this term. #metavar:NITER
conv-quorum = 0.99              # Minimum percentage of converged solutions to accept. #metavar:FRACTION
term-iters  = 2                 # Number of iterations to perform on this term before switching to the next.
                                  Must be even. This is only used for Jones chain functionality, when the
                                  solver is intended to alternate between terms. Set high to solve a term to 
                                  convergence before moving to the next. #metavar:NITER
ref-ant     = None              # Reference antenna - its phase is guaranteed to be zero. #metavar:ANTENNA

##  * ``DefaultParset.cfg`` now contains comment clauses which are auto-parsed into documentation by ``ReadCfg.py``, and
##  automatically converted into OptionParser command-line arguments. 
##
##  * Command-line arguments are formed as ``--Section-OptionName``.
##
##  * Each section can contain a ``_Help = section description`` option. This is turned into a docstring for the section.
##
##  * Each option line can contain a comment, preceded by "#". This is turned into a docstring for the option. Note that
##  long comments can be continued on the next line simply by indenting the next line. 
##
##  * Option comments can have embedded attributes of the form ``#attr:value``. These are removed from the docstring 
##  automatically. All attributes are optional! A few attributes have special meaning, as per below. 
##
##  * ``#type:TYPE`` forces the option to be interpreted as a specific Python type. E.g. ``#type:bool``, ``#type:str``,
##  ``#type:float``. In the absence of an explicit type attribute, the option will be parsed into a valid Python value 
##  (using ``eval()``), and converted into a string if that fails. This means that e.g. "None" will be interpreted as 
##  ``None`` and not the string ``"None"``. Note that this mechanism has some pitfalls: for example "all" gets parsed 
##  into the built-in ``all()`` function (unless surrounded by quotes), so if you want to make sure an option is treated 
##  as a string, make sure you add a ``#type:str`` attribute. 
##
##  * ``#options:A|B|C`` specifies that the option is a "selector" with a fixed set of values. See, for example, 
##  ``#options:None|LOFAR|FITS`` in BeamModel. 
##
##  * ``#metavar:VAR`` is passed to the metavar argument of ``OptionParser.add_option()``. This makes for a nicer-looking
##   command-line help. E.g. ``#metavar:MHz``. 
##
##  * ``#cmdline-only:1`` specifies that the option can only be changed from the command-line, not via a parset. 
##
##  * Options can have aliases. *NB: I'm not convinced about this feature. Maybe it makes things too confusing and should
##   be removed.* For example, 
##
##  ```
##  [Caching]
##  PSF|CachePSF            = 1         # Cache PSF data. May be expensive with large images, hence optional #type:bool
##  ```
##
##  means that the command-line option can be specified as ``--Caching-PSF`` or ``--CachePSF``. The second form is the 
##  "global alias". The GD object in DDFacet will contain both ``GD["Caching"]["PSF"]`` and 
##  ``GD["Caching"]["CachePSF"]``, set to the same value.
